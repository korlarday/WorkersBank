@model WorkersBank.Models.ViewModel.RegisterSeeker

@{
    ViewBag.Title = "RegisterAsSeeker";
}

<!-- Radio Checkbox Plugin -->
<link rel="stylesheet" href="~/Content/User/css/components/radio-checkbox.css" type="text/css" />
<link rel="stylesheet" href="@Url.Content("~/Content/User/css/components/datepicker.css")" type="text/css" />

<!-- Content
============================================= -->
<section id="content">

    <div class="content-wrap">

        <div class="container clearfix">

            <div class="row">
                <div class="card col-md-12">
                    <div class="card-body" style="padding: 40px;">
                        @using (Html.BeginForm("register-as-seeker", "Accounts", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <h3 style="text-align: center">Register As Job Seeker</h3>

                            <div class="row registerPage">

                                <div class="col-md-4 form-item">
                                    @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label" }) <span class="required-red">*</span>
                                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-4 form-item">
                                    @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label" }) <span class="required-red">*</span>
                                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-4 form-item">
                                    @Html.LabelFor(model => model.Middlename, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Middlename, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Middlename, "", new { @class = "text-danger" })
                                </div>


                                <div class="col-md-4 form-item">
                                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label" }) <span class="required-red">*</span>
                                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control tleft format" } })
                                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-4 form-item">
                                    @Html.LabelFor(model => model.HomeAddress, htmlAttributes: new { @class = "control-label" }) <span class="required-red">*</span>
                                    @Html.EditorFor(model => model.HomeAddress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.HomeAddress, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-4 form-item">
                                    <label for="state">State Of Origin:</label> <span class="required-red">*</span>
                                    <select class="form-control" id="state" name="StateOfOrigin" required>
                                        <option value="" selected>-- Select your state --</option>
                                    </select>
                                </div>

                                <div class="col-md-4 form-item">
                                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label" }) <span class="required-red">*</span>
                                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-4 form-item">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" }) <span class="required-red">*</span>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-4 form-item">
                                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" }) <span class="required-red">*</span>
                                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-4 form-item">
                                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" }) <span class="required-red">*</span>
                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-4 form-item">
                                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" }) <span class="required-red">*</span>
                                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-4 form-item">
                                    <div style="margin-left: 15px;">
                                        <label>Gender</label> <span class="required-red">*</span>
                                        <div style="margin-bottom: 0px">
                                            @Html.RadioButtonFor(model => model.Gender, "Male", new { @class = "radio-style", id = "male" })
                                            <label for="male" class="radio-style-1-label radio-small">Male</label>
                                        </div>
                                        <div>
                                            @Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "radio-style", id = "female" })
                                            <label for="female" class="radio-style-1-label radio-small">Female</label>
                                        </div>
                                    </div>
                                </div>

                                <div class="col_full" style="margin-left: 20px">
                                    <button type="submit" class="button button-3d button-blue nomargin">Register</button>

                                </div>
                            </div>
                        }



                    </div>
                </div>
            </div>


        </div>

    </div>

</section><!-- #content end -->

@section Scripts{
    <script src="~/Content/User/js/components/moment.js"></script>
    <script src="~/Content/User/js/components/datepicker.js"></script>
    <script>
        $(function() {
            $("#processTabs").tabs({ show: { effect: "fade", duration: 400 } });
            $('.format').datepicker({
                autoclose: true,
                format: "dd-mm-yyyy",
            });

            fetchStateUrl = "/Accounts/FetchStates"
            $.ajax({
                type: "GET",
                url: fetchStateUrl,
                success: function(data) {
                    var $dropdown = $("#state");
                    $.each(data, function() {
                        $dropdown.append($("<option />").val(this.State).text(this.State));
                    })
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Unable to fetch States at the moment.")
                    //alert(xhr.status);
                    //alert(thrownError);

                }
            })
        });
    </script>
}